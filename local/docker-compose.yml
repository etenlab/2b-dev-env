version: "3"
networks:
  default:
    name: eil

services:
  postgres:
    image: postgres:14.5
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_EIL_DATABASE}
    ports:
      - ${PORT_DB}:5432
    volumes:
      - ${PG_VOLUME_PATH:-./postgres}:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ${KC_DB_INIT_SCRIPT_PATH:-./init-database.sh}:/docker-entrypoint-initdb.d/init-database.sh

  postgres-cpg:
    image: postgres:14.5
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: cpg
    ports:
      - ${PORT_DB_CPG}:5432
    volumes:
      - ${PG_CPG_VOLUME_PATH:-./postgres}:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@etenlab.com
      PGADMIN_DEFAULT_PASSWORD: asdfasdf
    ports:
      - ${PORT_PGADMIN}:80
    depends_on:
      - postgres

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    restart: on-failure
    environment:
      KC_DB: postgres
      KC_DB_USERNAME: ${DB_USERNAME}
      KC_DB_PASSWORD: ${DB_PASSWORD}
      KC_DB_SCHEMA: public
      KC_DB_URL_DATABASE: ${DB_KC_DATABASE}
      KC_DB_URL_HOST: postgres
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
    #JDBC_PARAMS: "ssl=true"
    ports:
      - ${PORT_KEYCLOAK}:8080
    command:
      - start-dev
      - --features admin-fine-grained-authz
    depends_on:
      - postgres

  graphql-engine:
    image: hasura/graphql-engine:v2.13.2
    ports:
      - "${PORT_GRAPHQL}:8080"
    depends_on:
      - postgres
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgresql://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/${DB_EIL_DATABASE}
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgresql://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/${DB_EIL_DATABASE}
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey

  database-api:
    image: etenlab/database-api:latest
    restart: always
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_CLIENTS: ${KEYCLOAK_CLIENTS}
      CORS_ALLOW_ORIGINS: ${CORS_ALLOW_ORIGINS}
      PORT: 80
    ports:
      - ${PORT_DATABASE_API}:80
    depends_on:
      - postgres

  discussion-api:
    image: etenlab/discussion-api:latest
    restart: always
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      PORT: 80
    ports:
      - ${PORT_DISCUSSION_API}:80
    depends_on:
      - postgres
      - database-api

  discussion-subscriptions-api:
    image: etenlab/discussion-subscriptions-api:latest
    restart: always
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      PORT: 80
    ports:
      - ${PORT_DISCUSSION_SUBSCRIPTIONS_API}:80
    depends_on:
      - postgres
      - database-api

  file-api:
    image: etenlab/file-api:latest
    restart: always
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      AWS_S3_REGION: ${AWS_S3_REGION}
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
      AWS_S3_ACCESS_ID: ${AWS_S3_ACCESS_ID}
      AWS_S3_SECRET_KEY: ${AWS_S3_SECRET_KEY}
      PORT: 80
    ports:
      - ${PORT_FILE_API}:80
    depends_on:
      - postgres
      - database-api

  notifications-api:
    image: etenlab/notifications-api:latest
    restart: always
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      PORT: 80
    ports:
      - ${PORT_NOTIFICATIONS_API}:80
    depends_on:
      - postgres
      - database-api

  notifications-subscriptions-api:
    image: etenlab/notifications-subscriptions-api:latest
    restart: always
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      PORT: 80
    ports:
      - ${PORT_NOTIFICATIONS_SUBSCRIPTIONS_API}:80
    depends_on:
      - postgres
      - database-api

  admin-api:
    image: etenlab/admin-api:latest
    restart: always
    environment:
      KEYCLOAK_URL: keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: example
      DB_NAME: eil
      PORT: 80
    ports:
      - ${PORT_ADMIN_API}:80
    depends_on:
      - postgres
      - database-api

  aggregation-api:
    image: etenlab/aggregation-api:latest
    restart: always
    environment:
      NOTIFICATIONS_URL: http://notifications-api:80/graphql
      DISCUSSIONS_URL: http://discussion-api:80/graphql
      SUBGRAPH_DISCUSSION_URL: http://discussion-api:80/graphql
      SUBGRAPH_NOTIFICATION_URL: http://notifications-api:80/graphql
      SUBGRAPH_SITE_TEXT_URL: http://site-text-api:80/graphql
      SUBGRAPH_VOTING_URL: http://voting-api:80/graphql
      SUBGRAPH_SCRIPTURE_URL: http://scripture-api:80/graphql
      PORT: 80
    ports:
      - ${PORT_AGGREGATION_API}:80
    depends_on:
      - postgres
      - database-api
      - discussion-api
      - notifications-api
      - scripture-api
      - site-text-api
      - voting-api
      - oldb-api

  data-load-api:
    image: etenlab/data-load-api:latest
    restart: always
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      RUN_MIGRATIONS: ${RUN_MIGRATIONS}
      MODE: DEV
      PORT: 80
    ports:
      - ${PORT_DATA_LOAD_API}:80
    depends_on:
      - postgres
      - database-api

  oldb-api:
    image: etenlab/oldb-api:latest
    restart: always
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      AIRTABLE_BASE_ID: ${AIRTABLE_BASE_ID}
      AIRTABLE_API_KEY: ${AIRTABLE_API_KEY}
      AIRTABLE_TABLE_ID: ${AIRTABLE_TABLE_ID}
      AIRTABLE_TABLE_NAME: ${AIRTABLE_TABLE_NAME}
      AIRTABLE_TOTAL_RECORDS: ${AIRTABLE_TOTAL_RECORDS}
      PORT: 80
    ports:
      - ${PORT_OLDB_API}:80
    depends_on:
      - postgres
      - database-api

  site-text-api:
    image: etenlab/site-text-api:latest
    restart: always
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      PORT: 80
    ports:
      - ${PORT_SITE_TEXT_API}:80
    depends_on:
      - postgres
      - database-api

  voting-api:
    image: etenlab/voting-api:latest
    restart: always
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      PORT: 80
    ports:
      - ${PORT_VOTING_API}:80
    depends_on:
      - postgres
      - database-api

  scripture-api:
    image: etenlab/scripture-api:latest
    restart: always
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      PORT: 80
    ports:
      - ${PORT_SCRIPTURE_API}:80
    depends_on:
      - postgres
      - database-api
