version: "3"
networks:
  default:
    name: eil

services:
  postgres_db:
    image: postgres:14.5
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_EIL_DATABASE}
    ports:
      - ${PORT_DB}:5432

  postgres_kc:
    image: postgres:14.5
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_KC_DATABASE}
    volumes:
      # copy the sql script to create tables
      - ${KC_DB_INIT_SCRIPT_PATH}:/docker-entrypoint-initdb.d/init-database.sh

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@etenlab.com
      PGADMIN_DEFAULT_PASSWORD: asdfasdf
    ports:
      - ${PORT_PGADMIN}:80
    depends_on:
      - postgres_db

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    restart: on-failure
    environment:
      KC_DB: postgres
      KC_DB_USERNAME: ${DB_USERNAME}
      KC_DB_PASSWORD: ${DB_PASSWORD}
      KC_DB_SCHEMA: public
      KC_DB_URL_DATABASE: ${DB_KC_DATABASE}
      KC_DB_URL_HOST: postgres_kc
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
    #JDBC_PARAMS: "ssl=true"
    ports:
      - ${PORT_KEYCLOAK}:8080
    command:
      - start-dev
      - --features admin-fine-grained-authz
    depends_on:
      - postgres_db

  graphql-engine:
    image: hasura/graphql-engine:v2.13.2
    ports:
      - "${PORT_GRAPHQL}:8080"
    depends_on:
      - "postgres_db"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${DB_USERNAME}:${DB_PASSWORD}@postgres_db:5432/${DB_EIL_DATABASE}
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://${DB_USERNAME}:${DB_PASSWORD}@postgres_db:5432/${DB_EIL_DATABASE}
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey

  database-api:
    image: etenlab/database-api:latest
    restart: always
    environment:
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      PORT: 80
    ports:
      - ${PORT_DATABASE_API}:80
    command: npm run start
    depends_on:
      - postgres_db

  discussion-api:
    image: etenlab/discussion-api:latest
    restart: always
    environment:
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      PORT: ${PORT_DISCUSSION_API}
    ports:
      - ${PORT_DISCUSSION_API}:${PORT_DISCUSSION_API}
    command: npm run start
    depends_on:
      - postgres_db
      - database-api

  file-api:
    image: etenlab/file-api:latest
    restart: always
    environment:
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      AWS_S3_REGION: ${AWS_S3_REGION}
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
      AWS_S3_ACCESS_ID: ${AWS_S3_ACCESS_ID}
      AWS_S3_SECRET_KEY: ${AWS_S3_SECRET_KEY}
      PORT: ${PORT_FILE_API}
    ports:
      - ${PORT_FILE_API}:${PORT_FILE_API}
    command: npm run start
    depends_on:
      - postgres_db
      - database-api

  notifications-api:
    image: etenlab/notifications-api:latest
    restart: always
    environment:
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      PORT: ${PORT_NOTIFICATIONS_API}
    ports:
      - ${PORT_NOTIFICATIONS_API}:${PORT_NOTIFICATIONS_API}
    command: npm run start
    depends_on:
      - postgres_db
      - database-api

  admin-api:
    image: etenlab/admin-api:latest
    restart: always
    environment:
      DATABASE_HOST: postgres_db
      DATABASE_PORT: 5432
      KEYCLOAK_URL: keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      PORT: ${PORT_ADMIN_API}
    ports:
      - ${PORT_ADMIN_API}:${PORT_ADMIN_API}
    command: npm run start
    depends_on:
      - postgres_db
      - database-api

  aggregation-api:
    image: etenlab/aggregation-api:latest
    restart: always
    environment:
      PORT: ${PORT_AGGREGATION_API}
    ports:
      - ${PORT_AGGREGATION_API}:${PORT_AGGREGATION_API}
    command: npm run start:prod
    depends_on:
      - postgres_db
      - database-api

  data-load-api:
    image: etenlab/data-load-api:latest
    restart: always
    environment:
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      RUN_MIGRATIONS: ${RUN_MIGRATIONS}
      MODE: DEV
      PORT: ${PORT_DATA_LOAD_API}
    ports:
      - ${PORT_DATA_LOAD_API}:${PORT_DATA_LOAD_API}
    command: npm run start
    depends_on:
      - postgres_db
      - database-api

  oldb-api:
    image: etenlab/oldb-api:latest
    restart: always
    environment:
      PORT: ${PORT_OLDB_API}
    ports:
      - ${PORT_OLDB_API}:${PORT_OLDB_API}
    command: npm run start
    depends_on:
      - postgres_db
      - database-api

  site-text-api:
    image: etenlab/site-text-api:latest
    restart: always
    environment:
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      PORT: ${PORT_SITE_TEXT_API}
    ports:
      - ${PORT_SITE_TEXT_API}:${PORT_SITE_TEXT_API}
    command: npm run start
    depends_on:
      - postgres_db
      - database-api

  voting-api:
    image: etenlab/voting-api:latest
    restart: always
    environment:
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_EIL_DATABASE}
      PORT: ${PORT_VOTING_API}
    ports:
      - ${PORT_VOTING_API}:${PORT_VOTING_API}
    command: npm run start
    depends_on:
      - postgres_db
      - database-api
